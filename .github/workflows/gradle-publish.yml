name: Sitree Api Pipeline

on:
  push:
    branches:
      - 'main'
      - 'feature/**'
  pull_request:
    branches:
      - 'main'
    types:
      - closed

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

      # Gradle test 실행
      - name: Test with Gradle
        run: ./gradlew --info test -Dspring.profiles.active=live -Djasypt.encryptor.password=${{secrets.JASYPT_KEY}}

      - name: Build with Gradle
        run: ./gradlew bootJar -Dspring.profiles.active=live -Djasypt.encryptor.password=${{secrets.JASYPT_KEY}}

      # 빌드해서 생긴 JAR 파일을 깃허브 아티팩트로 업로드!!
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: sitree
          path: build/libs/sitree-0.0.1-SNAPSHOT.jar

    # The USERNAME and TOKEN need to correspond to the credentials environment variables used in
    # the publishing section of your build.gradle

#    - name: Publish to GitHub Packages
#      run: ./gradlew publish
#      env:
#        USERNAME: ${{ github.actor }}
#        TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    if: ${{ github.ref_name == 'main'}}
    needs: [build]
    runs-on : ubuntu-latest
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: sitree
          path: build/libs/

      # EC2에 배포
      # EC2 SSH 키를 private_key.pem 파일로 저장 ( 위치는 GitHub 서버 )
      # SCP를 사용하여 JAR 파일을 EC2 서버로 복사
      # SSH를 사용하여 EC2 서버에 연결하고 현재 실행 중인 Java 프로세스를 종료한 다음 새로운 Java 프로세스 생성 및 실행!!
      ## NLP 적용하면 IP -> 도메인으로 수정 + EC2 늘리면 run 추가
      - name: Deploy to EC2
        run: |
          echo "${{ secrets.AWS_ACCESS_KEY }}" > private_key.pem
          chmod 600 private_key.pem
          scp -i private_key.pem -o StrictHostKeyChecking=no build/libs/sitree-0.0.1-SNAPSHOT.jar ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }}:/home/${{ secrets.EC2_USERNAME }}/sitree.jar
          ssh -i private_key.pem -o StrictHostKeyChecking=no ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} "pgrep java | xargs kill -9; nohup java -jar -Dspring.profiles.active=live -Djasypt.encryptor.password=${{ secrets.JASYPT_KEY }} /home/${{ secrets.EC2_USERNAME }}/sitree.jar > app.log 2>&1 &"
          rm -f private_key.pem
